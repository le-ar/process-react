{"version":3,"sources":["utils.ts","hooks.tsx","db/db_shop.ts","Switch/Switch.tsx","Card/Card.tsx","RoundButton/RoundButton.tsx","Shops/Shops.tsx","WeekDay/WeekDay.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WeekNamesFull","EventEmitter","callbacks","cb","this","push","filter","callback","data","forEach","Times","Array","from","length","map","_","i","shopDb","_Shops","ShopId","ShopHourId","_OnChange","name","newShop","id","workingDays","working","hours","to","emit","shop","shopId","day","find","wd","UpdateShop","shopHourId","sh","UpdateShopHour","Switch","props","btnClass","checked","className","onClick","onChange","Card","useState","visible","setVisible","hiddable","join","title","children","RoundButtonPlus","height","viewBox","width","xmlns","d","RoundButtonX","ShopView","React","memo","RemoveShop","Shops","shops","shopName","setShopName","json","setJson","value","e","target","AddShop","JSON","stringify","undefined","replaceAll","style","boxSizing","dangerouslySetInnerHTML","__html","ShopHourView","workingDay","addHours","AddShopHours","removeHours","RemoveShopHour","UpdateRemoveShopHour","type","UpdateShopWorkingDays","wh","display","defaultValue","parseInt","time","App","setShops","useEffect","OnChange","on","off","useShops","WeekDay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eba1039e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport type ReactChildren =\r\n  | React.ReactChild\r\n  | React.ReactChildren\r\n  | React.ReactChild[]\r\n  | React.ReactChildren[]\r\n  | JSX.Element\r\n  | JSX.Element[];\r\n\r\nexport const WeekNames = [\"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\", \"Вс\"];\r\nexport const WeekNamesFull = [\r\n  \"Понедельник\",\r\n  \"Вторник\",\r\n  \"Среда\",\r\n  \"Четверг\",\r\n  \"Пятница\",\r\n  \"Суббота\",\r\n  \"Воскресенье\",\r\n];\r\n\r\nexport class EventEmitter<T> {\r\n  callbacks: ((val: T) => void)[] = [];\r\n\r\n  on(cb: (val: T) => void) {\r\n    this.callbacks.push(cb);\r\n  }\r\n\r\n  off(cb: (val: T) => void) {\r\n    this.callbacks = this.callbacks.filter((callback) => callback !== cb);\r\n  }\r\n\r\n  emit(data: T) {\r\n    this.callbacks.forEach((cb) => cb(data));\r\n  }\r\n}\r\n\r\nexport const Times = Array.from({ length: 24 }).map((_, i) => {\r\n  const prefix = i < 10 ? \"0\" : \"\";\r\n  return prefix + i + \":00\";\r\n});\r\n","import { useEffect, useState } from \"react\";\r\nimport { ShopDb } from \"./db/db_shop\";\r\nimport { Shop } from \"./db/shop\";\r\n\r\nconst shopDb = new ShopDb();\r\n\r\nexport function AddShop(name: string) {\r\n  shopDb.AddShop(name);\r\n}\r\n\r\nexport function UpdateShopWorkingDays(\r\n  shopId: number,\r\n  day: number,\r\n  working: boolean\r\n) {\r\n  shopDb.UpdateShopWorkingDays(shopId, day, working);\r\n}\r\n\r\nexport function RemoveShop(shopId: number) {\r\n  shopDb.RemoveShop(shopId);\r\n}\r\n\r\nexport function useShops() {\r\n  const [shops, setShops] = useState(shopDb.Shops);\r\n  useEffect(() => {\r\n    const callback = (shops: Shop[]) => setShops(shops);\r\n    shopDb.OnChange.on(callback);\r\n\r\n    return () => {\r\n      shopDb.OnChange.off(callback);\r\n    };\r\n  }, []);\r\n\r\n  return shops;\r\n}\r\n\r\nexport function UpdateAddShopHour(day: number, shopId: number) {\r\n  shopDb.AddShopHours(day, shopId);\r\n}\r\n\r\nexport function UpdateRemoveShopHour(\r\n  day: number,\r\n  shopId: number,\r\n  shopHourId: number\r\n) {\r\n  shopDb.RemoveShopHour(day, shopId, shopHourId);\r\n}\r\n\r\nexport function UpdateShopHour(\r\n  day: number,\r\n  shopId: number,\r\n  shopHourId: number,\r\n  from: number,\r\n  to: number\r\n) {\r\n  shopDb.UpdateShopHour(day, shopId, shopHourId, from, to);\r\n}\r\n","import { EventEmitter } from \"../utils\";\r\nimport { Shop } from \"./shop\";\r\nimport { ShopHour } from \"./shop_hour\";\r\n\r\nexport class ShopDb {\r\n  private _Shops: Shop[] = [];\r\n  private ShopId: number = 0;\r\n  private ShopHourId: number = 0;\r\n  private _OnChange = new EventEmitter<Shop[]>();\r\n\r\n  get Shops() {\r\n    return this._Shops;\r\n  }\r\n\r\n  get OnChange() {\r\n    return this._OnChange;\r\n  }\r\n\r\n  AddShop(name: string) {\r\n    const newShop: Shop = {\r\n      id: ++this.ShopId,\r\n      name,\r\n      workingDays: Array.from({ length: 7 }).map(() => ({\r\n        working: false,\r\n        hours: [\r\n          {\r\n            id: ++this.ShopHourId,\r\n            from: 0,\r\n            to: 23,\r\n          },\r\n        ],\r\n      })),\r\n    };\r\n    this._Shops = [...this._Shops, newShop];\r\n    this._OnChange.emit(this._Shops);\r\n  }\r\n\r\n  UpdateShop(newShop: Shop) {\r\n    this._Shops = this._Shops.map((shop) => {\r\n      if (shop.id === newShop.id) {\r\n        return newShop;\r\n      }\r\n      return shop;\r\n    });\r\n    this._OnChange.emit(this._Shops);\r\n  }\r\n\r\n  UpdateShopWorkingDays(shopId: number, day: number, working: boolean) {\r\n    const shop = this._Shops.find((shop) => shopId === shop.id);\r\n    if (shop == null) {\r\n      return;\r\n    }\r\n\r\n    const workingDays = shop.workingDays.map((wd, i) =>\r\n      i === day ? { ...wd, working } : wd\r\n    );\r\n\r\n    this.UpdateShop({ ...shop, workingDays });\r\n  }\r\n\r\n  RemoveShop(shopId: number) {\r\n    this._Shops = this._Shops.filter((shop) => shop.id !== shopId);\r\n    this._OnChange.emit(this._Shops);\r\n  }\r\n\r\n  AddShopHours(day: number, shopId: number) {\r\n    const shop = this._Shops.find((shop) => shopId === shop.id);\r\n    if (shop == null) {\r\n      return;\r\n    }\r\n\r\n    const hours = [\r\n      ...shop.workingDays[day].hours,\r\n      {\r\n        id: ++this.ShopHourId,\r\n        from: 0,\r\n        to: 23,\r\n      },\r\n    ];\r\n\r\n    const workingDays: ShopHour[] = shop.workingDays.map((wd, i) =>\r\n      i === day ? { ...wd, hours } : wd\r\n    );\r\n    this.UpdateShop({ ...shop, workingDays });\r\n  }\r\n\r\n  RemoveShopHour(day: number, shopId: number, shopHourId: number) {\r\n    const shop = this._Shops.find((shop) => shopId === shop.id);\r\n    if (shop == null) {\r\n      return;\r\n    }\r\n\r\n    const hours = shop.workingDays[day].hours.filter(\r\n      (sh) => sh.id !== shopHourId\r\n    );\r\n\r\n    const workingDays: ShopHour[] = shop.workingDays.map((wd, i) =>\r\n      i === day ? { ...wd, hours } : wd\r\n    );\r\n    this.UpdateShop({ ...shop, workingDays });\r\n  }\r\n\r\n  UpdateShopHour(\r\n    day: number,\r\n    shopId: number,\r\n    shopHourId: number,\r\n    from: number,\r\n    to: number\r\n  ) {\r\n    \r\n    const shop = this._Shops.find((shop) => shopId === shop.id);\r\n    if (shop == null) {\r\n      return;\r\n    }\r\n\r\n    const hours = shop.workingDays[day].hours.map(\r\n      (sh) => {\r\n        if (sh.id === shopHourId) {\r\n          return {\r\n            id: sh.id,\r\n            from,\r\n            to,\r\n          };\r\n        }\r\n        return sh;\r\n      }\r\n    );\r\n\r\n    const workingDays: ShopHour[] = shop.workingDays.map((wd, i) =>\r\n      i === day ? { ...wd, hours } : wd\r\n    );\r\n    this.UpdateShop({ ...shop, workingDays });\r\n  }\r\n}\r\n","import \"./switch.scss\";\r\n\r\nexport default function Switch(props: {\r\n  checked: boolean;\r\n  onChange: (checked: boolean) => void;\r\n}) {\r\n  const btnClass = props.checked ? \"switch on\" : \"switch\";\r\n\r\n  return (\r\n    <button className={btnClass} onClick={() => props.onChange(!props.checked)}>\r\n      <div className=\"switch__pin\"></div>\r\n    </button>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport Switch from \"../Switch/Switch\";\r\nimport { ReactChildren } from \"../utils\";\r\nimport \"./card.scss\";\r\n\r\nexport default function Card(props: {\r\n  hiddable?: boolean;\r\n  title: string;\r\n  children?: ReactChildren;\r\n}) {\r\n  const [visible, setVisible] = useState(true);\r\n\r\n  const hiddable = !!props.hiddable;\r\n\r\n  return (\r\n    <div className={[\"card\", visible ? \"\" : \"hidden\"].join(\" \")}>\r\n      <div className=\"card__header\">\r\n        <div>{props.title}</div>\r\n        {hiddable && (\r\n          <div>\r\n            <Switch\r\n              checked={visible}\r\n              onChange={(checked) => {\r\n                setVisible(checked);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"card__body\">{props.children}</div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./round_button.scss\";\r\n\r\nexport function RoundButtonPlus(props: { onClick?: () => void }) {\r\n  return (\r\n    <button className=\"rb blue\" onClick={props.onClick}>\r\n      <svg\r\n        height=\"10px\"\r\n        viewBox=\"0 0 448 448\"\r\n        width=\"10px\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path d=\"m408 184h-136c-4.417969 0-8-3.582031-8-8v-136c0-22.089844-17.910156-40-40-40s-40 17.910156-40 40v136c0 4.417969-3.582031 8-8 8h-136c-22.089844 0-40 17.910156-40 40s17.910156 40 40 40h136c4.417969 0 8 3.582031 8 8v136c0 22.089844 17.910156 40 40 40s40-17.910156 40-40v-136c0-4.417969 3.582031-8 8-8h136c22.089844 0 40-17.910156 40-40s-17.910156-40-40-40zm0 0\" />\r\n      </svg>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport function RoundButtonX(props: { onClick?: () => void }) {\r\n  return (\r\n    <button className=\"rb red\" onClick={props.onClick}>\r\n      X\r\n    </button>\r\n  );\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport { Shop } from \"../db/shop\";\r\nimport { AddShop, RemoveShop } from \"../hooks\";\r\nimport { RoundButtonX } from \"../RoundButton/RoundButton\";\r\nimport \"./shops.scss\";\r\n\r\n// function WeekDay(props: {\r\n//   name: string;\r\n//   checked: boolean;\r\n//   onCheck: (checked: boolean) => void;\r\n// }) {\r\n//   return (\r\n//     <label className=\"day\">\r\n//       <div>{props.name}</div>\r\n//       <input\r\n//         type=\"checkbox\"\r\n//         checked={props.checked}\r\n//         onChange={(e) => {\r\n//           props.onCheck(e.target.checked);\r\n//         }}\r\n//       />\r\n//     </label>\r\n//   );\r\n// }\r\n\r\nconst ShopView = React.memo(function (props: { shop: Shop }) {\r\n  const shop = props.shop;\r\n\r\n  // const check = (day: number, checked: boolean) => {\r\n  //   UpdateShopWorkingDays(shop.id, day, checked);\r\n  // };\r\n\r\n  const remove = () => {\r\n    RemoveShop(shop.id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"shop\">\r\n      <div className=\"shop__name\">{props.shop.name}</div>\r\n      {/* <div className=\"week\">\r\n        {shop.workingDays.map((day, i) => (\r\n          <WeekDay\r\n            key={WeekNames[i]}\r\n            name={WeekNames[i]}\r\n            checked={!!day}\r\n            onCheck={(checked) => check(i, checked)}\r\n          />\r\n        ))}\r\n      </div> */}\r\n      <div>\r\n        <RoundButtonX onClick={remove} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default function Shops(props: { shops: Shop[] }) {\r\n  const shops = props.shops;\r\n  const [shopName, setShopName] = useState(\"\");\r\n  const [json, setJson] = useState(\"\");\r\n\r\n  const addShop = () => {\r\n    if (shopName.length > 0) {\r\n      AddShop(shopName);\r\n      setShopName(\"\");\r\n    }\r\n  };\r\n\r\n  const Save = () => {\r\n    setJson(\r\n      JSON.stringify(shops, undefined, 4)\r\n        .replaceAll(\"\\n\", \"<br>\")\r\n        .replaceAll(\" \", \"&nbsp;\")\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card title=\"Точки\">\r\n      <Fragment>\r\n        {shops.map((shop) => (\r\n          <ShopView key={shop.id} shop={shop} />\r\n        ))}\r\n      </Fragment>\r\n      <div>\r\n        <div className=\"txt-hidden\">Добавить:</div>\r\n        <div className=\"add-shop\">\r\n          <input\r\n            value={shopName}\r\n            onChange={(e) => {\r\n              setShopName(e.target.value);\r\n            }}\r\n          />\r\n          <button onClick={addShop}>Добавить</button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button onClick={Save} style={{ boxSizing: \"border-box\" }}>\r\n          Save\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            setJson(\"\");\r\n          }}\r\n        >\r\n          X\r\n        </button>\r\n        <div dangerouslySetInnerHTML={{ __html: json }}>{}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport { Shop } from \"../db/shop\";\r\nimport {\r\n  UpdateAddShopHour,\r\n  UpdateRemoveShopHour,\r\n  UpdateShopHour,\r\n  UpdateShopWorkingDays,\r\n} from \"../hooks\";\r\nimport { RoundButtonPlus, RoundButtonX } from \"../RoundButton/RoundButton\";\r\nimport { Times, WeekNamesFull } from \"../utils\";\r\nimport \"./week-day.scss\";\r\n\r\nconst ShopHourView = React.memo(function (props: { day: number; shop: Shop }) {\r\n  const shop = props.shop;\r\n  const workingDay = shop.workingDays[props.day];\r\n\r\n  const onCheck = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    UpdateShopWorkingDays(shop.id, props.day, e.target.checked);\r\n  };\r\n\r\n  const addHours = () => {\r\n    UpdateAddShopHour(props.day, shop.id);\r\n  };\r\n  const removeHours = (shopHourId: number) => {\r\n    UpdateRemoveShopHour(props.day, shop.id, shopHourId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"week-day-shop\">\r\n      <label className=\"week-day-shop__label\">\r\n        <div>\r\n          <input type=\"checkbox\" onChange={onCheck} />\r\n        </div>\r\n        <div className=\"week-day-shop__name\">{shop.name}</div>\r\n      </label>\r\n      <div>\r\n        {workingDay.hours.map((wh, i) => (\r\n          <div\r\n            key={wh.id}\r\n            className=\"week-day-shop__hours\"\r\n            style={{ display: workingDay.working ? \"block\" : \"none\" }}\r\n          >\r\n            <span>С</span>\r\n            <select\r\n              defaultValue={wh.from}\r\n              onChange={(e) => {\r\n                UpdateShopHour(\r\n                  props.day,\r\n                  shop.id,\r\n                  wh.id,\r\n                  parseInt(e.target.value),\r\n                  wh.to\r\n                );\r\n              }}\r\n            >\r\n              {Times.map((time, i) => (\r\n                <option key={time} value={i}>\r\n                  {time}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <span>До</span>\r\n            <select\r\n              defaultValue={wh.to}\r\n              onChange={(e) => {\r\n                UpdateShopHour(\r\n                  props.day,\r\n                  shop.id,\r\n                  wh.id,\r\n                  wh.from,\r\n                  parseInt(e.target.value)\r\n                );\r\n              }}\r\n            >\r\n              {Times.map((time, i) => (\r\n                <option key={time} value={i}>\r\n                  {time}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {i + 1 === workingDay.hours.length ? (\r\n              <RoundButtonPlus onClick={addHours} />\r\n            ) : (\r\n              <RoundButtonX onClick={() => removeHours(wh.id)} />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default React.memo(function (props: { day: number; shops: Shop[] }) {\r\n  return (\r\n    <Card hiddable={true} title={WeekNamesFull[props.day]}>\r\n      {props.shops.map((sh) => (\r\n        <ShopHourView key={sh.id} shop={sh} day={props.day} />\r\n      ))}\r\n    </Card>\r\n  );\r\n});\r\n","import React from \"react\";\nimport { useShops } from \"./hooks\";\nimport Shops from \"./Shops/Shops\";\nimport { WeekNamesFull } from \"./utils\";\nimport WeekDay from \"./WeekDay/WeekDay\";\n\nfunction App() {\n  const shops = useShops();\n\n  return (\n    <div className=\"App\">\n      <Shops shops={shops} />\n      {WeekNamesFull.map((name, i) => (\n        <WeekDay key={name} day={i} shops={shops} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}